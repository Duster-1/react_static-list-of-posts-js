{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","className","name","href","email","body","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","mergeList","postsFromServer","userId","usersFromServer","find","commentId","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"818IAEaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCD,EAAQE,OAE5C,OAEH,mBACED,UAAU,qBACVE,KAAI,iBAAYH,EAAQI,OAF1B,SAIGJ,EAAQI,WAIb,qBAAKH,UAAU,oBAAf,SACGD,EAAQK,WCfFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKN,UAAU,cAAf,SAEIM,EAASC,KAAI,SAAAR,GAAO,OAClB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQS,WCLvCC,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,mBAAGV,UAAU,WAAWE,KAAI,iBAAYQ,EAAKP,OAA7C,SACGO,EAAKT,SCAGU,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAkCY,EAAKC,QAGrCD,EAAKF,MACH,8BACG,eAED,cAAC,EAAD,CAAUA,KAAME,EAAKF,aAM7B,mBAAGV,UAAU,iBAAb,SACGY,EAAKR,OAGmB,IAAzBQ,EAAKN,SAASQ,OACZ,mBAAG,UAAQ,oBAAX,6BAEA,cAAC,EAAD,CAAaR,SAAUM,EAAKN,gBCxBvBS,G,MAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACtB,qBAAKhB,UAAU,WAAf,SAEIgB,EAAUT,KAAI,SAAAK,GAAI,OAChB,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,WCSjC,IAAMQ,EAAYC,EAAgBV,KAAI,SAAAK,GAAI,kCAC5CA,GAD4C,IAE/CF,MAXmBQ,EAWDN,EAAKM,OAVhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAC3C,MAULZ,UAPsBe,EAOGT,EAAKJ,GANvBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQyB,SAAWH,QADjE,IAAwBA,EALHH,KAeRO,EAAM,kBACjB,0BAASzB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,UAAWA,QCtBzBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5db8c8e5.chunk.js","sourcesContent":["/* eslint-disable */\n\nexport const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{comment.name}</strong>\n\n        {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {comment.email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {comment.body}\n    </div>\n  </div>\n);\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {\n      comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))\n    }\n  </div>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{ post.title }</h3>\n\n      {\n        post.user && (\n          <p>\n            {' Posted by  '}\n\n            <UserInfo user={post.user} />\n          </p>\n        )\n      }\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {post.body}\n    </p>\n    {\n      post.comments.length === 0 ? (\n        <b data-cy=\"NoCOmmentsMessage\">No comments yet</b>\n      ) : (\n        <CommentList comments={post.comments} />\n      )\n    }\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\nimport './PostList.scss';\n\nexport const PostList = ({ mergeList }) => (\n  <div className=\"PostList\">\n    {\n      mergeList.map(post => (\n        <PostInfo post={post} key={post.id} />\n      ))\n    }\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n\nfunction getCommentById(commentId) {\n  return commentsFromServer.filter(comment => comment.postId === commentId);\n}\n\nexport const mergeList = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentById(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList mergeList={mergeList} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}